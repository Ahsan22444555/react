{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Ind","props","handleDeleteOptions","bind","handlePick","handleAddOption","handleDeleteOption","state","options","json","localStorage","getItem","JSON","parse","this","setState","e","prevProps","prevState","length","stringify","setItem","console","log","optionToRemove","filter","option","randomNum","Math","floor","random","alert","indexOf","concat","subtitle","hasOptions","Component","Header","title","defaultProps","Action","onClick","disabled","Options","map","optionText","Option","AddOption","error","undefined","preventDefault","target","elements","value","trim","onSubmit","type","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"iNAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAC1B,EAAKI,MAAQ,CACXC,QAAS,IAPM,E,gEAWjB,IACE,IAAMC,EAAOC,aAAaC,QAAQ,WAC5BH,EAAUI,KAAKC,MAAMJ,GAEvBD,GACFM,KAAKC,UAAS,iBAAO,CAAEP,cAEzB,MAAOQ,O,yCAIQC,EAAWC,GAC5B,GAAIA,EAAUV,QAAQW,SAAWL,KAAKP,MAAMC,QAAQW,OAAQ,CAC1D,IAAMV,EAAOG,KAAKQ,UAAUN,KAAKP,MAAMC,SACvCE,aAAaW,QAAQ,UAAWZ,M,6CAIlCa,QAAQC,IAAI,0B,4CAGZT,KAAKC,UAAS,iBAAO,CAAEP,QAAS,S,yCAEfgB,GACjBV,KAAKC,UAAS,SAACG,GAAD,MAAgB,CAC5BV,QAASU,EAAUV,QAAQiB,QAAO,SAACC,GAAD,OAAYF,IAAmBE,W,mCAInE,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWhB,KAAKP,MAAMC,QAAQW,QAC1DO,EAASZ,KAAKP,MAAMC,QAAQmB,GAClCI,MAAML,K,sCAEQA,GACd,OAAKA,EAEMZ,KAAKP,MAAMC,QAAQwB,QAAQN,IAAW,EACxC,kCAGTZ,KAAKC,UAAS,SAACG,GAAD,MAAgB,CAC5BV,QAASU,EAAUV,QAAQyB,OAAOP,OAN3B,kC,+BAYT,OACE,gCACE,cAAC,EAAD,CAAQQ,SAJK,6CAKb,cAAC,EAAD,CACEC,WAAYrB,KAAKP,MAAMC,QAAQW,OAAS,EACxCf,WAAYU,KAAKV,aAEnB,cAAC,EAAD,CACEI,QAASM,KAAKP,MAAMC,QACpBN,oBAAqBY,KAAKZ,oBAC1BI,mBAAoBQ,KAAKR,qBAE3B,cAAC,EAAD,CACED,gBAAiBS,KAAKT,yB,GAxEd+B,aA+EZC,EAAS,SAACpC,GACd,OACE,gCACE,6BAAKA,EAAMqC,QACVrC,EAAMiC,UAAY,6BAAKjC,EAAMiC,eAKpCG,EAAOE,aAAe,CACpBD,MAAO,cAGT,IAAME,EAAS,SAACvC,GACd,OACE,8BACE,wBACEwC,QAASxC,EAAMG,WACfsC,UAAWzC,EAAMkC,WAFnB,kCAUAQ,EAAU,SAAC1C,GACf,OACE,gCACE,wBAAQwC,QAASxC,EAAMC,oBAAvB,wBAC0B,IAAzBD,EAAMO,QAAQW,QAAgB,qEAE7BlB,EAAMO,QAAQoC,KAAI,SAAClB,GAAD,OAChB,cAAC,EAAD,CAEEmB,WAAYnB,EACZpB,mBAAoBL,EAAMK,oBAFrBoB,UAUXoB,EAAS,SAAC7C,GACd,OACE,gCACGA,EAAM4C,WACP,wBACEJ,QAAS,SAACzB,GACRf,EAAMK,mBAAmBL,EAAM4C,aAFnC,wBAWAE,E,kDACJ,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IACDI,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKI,MAAQ,CACXyC,WAAOC,GAJQ,E,4DAOHjC,GACdA,EAAEkC,iBAEF,IAAMxB,EAASV,EAAEmC,OAAOC,SAAS1B,OAAO2B,MAAMC,OACxCN,EAAQlC,KAAKb,MAAMI,gBAAgBqB,GAEzCZ,KAAKC,UAAS,iBAAO,CAAEiC,YAElBA,IACHhC,EAAEmC,OAAOC,SAAS1B,OAAO2B,MAAQ,M,+BAInC,OACE,gCACGvC,KAAKP,MAAMyC,OAAS,4BAAIlC,KAAKP,MAAMyC,QACpC,uBAAMO,SAAUzC,KAAKT,gBAArB,UACE,uBAAOmD,KAAK,OAAOC,KAAK,WACxB,0D,GA1BcrB,aAiCTpC,ICnKA0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.c2ac075d.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\n\n\nclass Ind extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteOptions = this.handleDeleteOptions.bind(this);\n    this.handlePick = this.handlePick.bind(this);\n    this.handleAddOption = this.handleAddOption.bind(this);\n    this.handleDeleteOption = this.handleDeleteOption.bind(this);\n    this.state = {\n      options: []\n    };\n  }\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem('options');\n      const options = JSON.parse(json);\n\n      if (options) {\n        this.setState(() => ({ options }));\n      }\n    } catch (e) {\n      // Do nothing at all\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options.length !== this.state.options.length) {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem('options', json);\n    }\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n  handleDeleteOptions() {\n    this.setState(() => ({ options: [] }));\n  }\n  handleDeleteOption(optionToRemove) {\n    this.setState((prevState) => ({\n      options: prevState.options.filter((option) => optionToRemove !== option)\n    }));\n  }\n  handlePick() {\n    const randomNum = Math.floor(Math.random() * this.state.options.length);\n    const option = this.state.options[randomNum];\n    alert(option);\n  }\n  handleAddOption(option) {\n    if (!option) {\n      return 'Enter valid value to add item';\n    } else if (this.state.options.indexOf(option) > -1) {\n      return 'This option already exists';\n    }\n\n    this.setState((prevState) => ({\n      options: prevState.options.concat(option)\n    }));\n  }\n  render() {\n    const subtitle = 'Put your life in the hands of a computer';\n\n    return (\n      <div>\n        <Header subtitle={subtitle} />\n        <Action\n          hasOptions={this.state.options.length > 0}\n          handlePick={this.handlePick}\n        />\n        <Options\n          options={this.state.options}\n          handleDeleteOptions={this.handleDeleteOptions}\n          handleDeleteOption={this.handleDeleteOption}\n        />\n        <AddOption\n          handleAddOption={this.handleAddOption}\n        />\n      </div>\n    );\n  }\n}\n\nconst Header = (props) => {\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      {props.subtitle && <h2>{props.subtitle}</h2>}\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  title: 'Indecision'\n};\n\nconst Action = (props) => {\n  return (\n    <div>\n      <button\n        onClick={props.handlePick}\n        disabled={!props.hasOptions}\n      >\n        What should I do?\n      </button>\n    </div>\n  );\n};\n\nconst Options = (props) => {\n  return (\n    <div>\n      <button onClick={props.handleDeleteOptions}>Remove All</button>\n      {props.options.length === 0 && <p>Please add an option to get started!</p>}\n      {\n        props.options.map((option) => (\n          <Option\n            key={option}\n            optionText={option}\n            handleDeleteOption={props.handleDeleteOption}\n          />\n        ))\n      }\n    </div>\n  );\n};\n\nconst Option = (props) => {\n  return (\n    <div>\n      {props.optionText}\n      <button\n        onClick={(e) => {\n          props.handleDeleteOption(props.optionText);\n        }}\n      >\n        remove\n      </button>\n    </div>\n  );\n};\n\nclass AddOption extends Component {\n  constructor(props) {\n    super(props);\n    this.handleAddOption = this.handleAddOption.bind(this);\n    this.state = {\n      error: undefined\n    };\n  }\n  handleAddOption(e) {\n    e.preventDefault();\n\n    const option = e.target.elements.option.value.trim();\n    const error = this.props.handleAddOption(option);\n\n    this.setState(() => ({ error }));\n\n    if (!error) {\n      e.target.elements.option.value = '';\n    }\n  }\n  render() {\n    return (\n      <div>\n        {this.state.error && <p>{this.state.error}</p>}\n        <form onSubmit={this.handleAddOption}>\n          <input type=\"text\" name=\"option\" />\n          <button>Add Option</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Ind;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}